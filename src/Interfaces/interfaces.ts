export interface Event {
	name: string;
	once?: boolean | false;
	execute: (...args: any[]) => void;
}

export interface botConfig {
	/** The bot's token. */
	token: string;
	/** The MongoDB database URI. */
	database: string;
	/** The array of IDs for the owners / developers of the bot. */
	ownerIDs: Array<string>;
	/** The key used to decrypt user's webhooks. */
	decryptionKey: string;
	/** The user agent which will be provided when needed to API services that require it. */
	userAgent: string;

	/** The debug object containing debug related information. */
	debug: {
		devGuild: string;
		overwatchChannel: string;
		statKey: string;
		watcherHook: string;
	};

	APIs: {
		/** The API key generated by RAWG.io. */
		rawgKey: string;
		/** The API key generated by the Genius Developer Portal. */
		geniusKey: string;
		/** The API key generated by the The Cat API Dashboard. */
		cattoKey: string;
		/** The API key generated by the OMDB API Portal. */
		omdbAPIKey: string;
	};

	music: {
		/** The array of lavalink nodes. */
		nodes: {
			/** The name of the node. */
			name: string;
			/** The IP of the node. */
			host: string;
			/** The port of the node. */
			port: number;
			/** The password for the node. */
			password: string;
			/** The SSL boolean of the node. Set this to true if you get an SSL error. */
			secure: boolean;
		}[];
	};
}
